local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local UserInputService = game:GetService("UserInputService")
local TweenService = game:GetService("TweenService")
local player = Players.LocalPlayer
local mouse = player:GetMouse()
local camera = workspace.CurrentCamera

-- === Variables ===
local floatHeight = 12
local floatSpeed = 20
local teleportDistance = 5
local floating = false
local floatPart = nil
local floatBodyVelocity = nil

-- === Create GUI ===
local ScreenGui = Instance.new("ScreenGui")
ScreenGui.Name = "StealABrainrotGUI"
ScreenGui.ResetOnSpawn = false
ScreenGui.Parent = player:WaitForChild("PlayerGui")

-- Draggable frame
local frame = Instance.new("Frame")
frame.Size = UDim2.new(0, 380, 0, 260)
frame.Position = UDim2.new(0.5, -190, 0.4, -130)
frame.BackgroundColor3 = Color3.fromRGB(25, 25, 25)
frame.BorderSizePixel = 0
frame.Active = true
frame.Draggable = true
frame.Parent = ScreenGui

-- Title
local title = Instance.new("TextLabel")
title.Size = UDim2.new(1, 0, 0, 30)
title.BackgroundTransparency = 1
title.Text = "Steal a Brainrot Helper"
title.TextColor3 = Color3.fromRGB(255, 255, 255)
title.Font = Enum.Font.GothamBold
title.TextSize = 22
title.Parent = frame

-- Tab Buttons container
local tabsFrame = Instance.new("Frame")
tabsFrame.Size = UDim2.new(1, 0, 0, 30)
tabsFrame.Position = UDim2.new(0, 0, 0, 30)
tabsFrame.BackgroundTransparency = 1
tabsFrame.Parent = frame

-- Tab Buttons
local tabs = {"Main", "Visual", "Misc"}
local tabButtons = {}
local pages = {}

local function createTabButton(name, pos)
    local btn = Instance.new("TextButton")
    btn.Size = UDim2.new(0, 120, 1, 0)
    btn.Position = UDim2.new(0, pos, 0, 0)
    btn.Text = name
    btn.BackgroundColor3 = Color3.fromRGB(45, 45, 45)
    btn.TextColor3 = Color3.new(1,1,1)
    btn.Font = Enum.Font.Gotham
    btn.TextSize = 18
    btn.Parent = tabsFrame
    return btn
end

local function createPage()
    local page = Instance.new("Frame")
    page.Size = UDim2.new(1, 0, 1, -60)
    page.Position = UDim2.new(0, 0, 0, 60)
    page.BackgroundTransparency = 1
    page.Visible = false
    page.Parent = frame
    return page
end

for i, name in ipairs(tabs) do
    local btn = createTabButton(name, (i-1)*120)
    tabButtons[name] = btn
    pages[name] = createPage()
end

-- Switch tabs function
local function switchTab(tabName)
    for name, page in pairs(pages) do
        page.Visible = (name == tabName)
        tabButtons[name].BackgroundColor3 = (name == tabName) and Color3.fromRGB(70, 70, 70) or Color3.fromRGB(45,45,45)
    end
end
switchTab("Main")

-- ===== Main Tab =====

local mainPage = pages["Main"]

-- Float Toggle Button
local floatToggle = Instance.new("TextButton")
floatToggle.Size = UDim2.new(0, 180, 0, 40)
floatToggle.Position = UDim2.new(0.5, -90, 0, 20)
floatToggle.BackgroundColor3 = Color3.fromRGB(65, 65, 65)
floatToggle.TextColor3 = Color3.new(1,1,1)
floatToggle.Font = Enum.Font.GothamBold
floatToggle.TextSize = 20
floatToggle.Text = "Toggle Float (Q)"
floatToggle.Parent = mainPage

-- Speed Input Label
local speedLabel = Instance.new("TextLabel")
speedLabel.Size = UDim2.new(0, 100, 0, 30)
speedLabel.Position = UDim2.new(0, 40, 0, 80)
speedLabel.BackgroundTransparency = 1
speedLabel.TextColor3 = Color3.new(1,1,1)
speedLabel.Font = Enum.Font.Gotham
speedLabel.TextSize = 18
speedLabel.Text = "Speed:"
speedLabel.TextXAlignment = Enum.TextXAlignment.Left
speedLabel.Parent = mainPage

-- Speed TextBox
local speedBox = Instance.new("TextBox")
speedBox.Size = UDim2.new(0, 100, 0, 30)
speedBox.Position = UDim2.new(0, 140, 0, 80)
speedBox.BackgroundColor3 = Color3.fromRGB(45, 45, 45)
speedBox.TextColor3 = Color3.new(1,1,1)
speedBox.Font = Enum.Font.Gotham
speedBox.TextSize = 18
speedBox.Text = tostring(floatSpeed)
speedBox.ClearTextOnFocus = false
speedBox.Parent = mainPage

speedBox.FocusLost:Connect(function(enterPressed)
    if enterPressed then
        local val = tonumber(speedBox.Text)
        if val and val > 0 and val <= 100 then
            floatSpeed = val
            speedBox.Text = tostring(floatSpeed)
        else
            speedBox.Text = tostring(floatSpeed)
        end
    end
end)

-- Auto Update Float Speed while floating
local function updateFloatSpeed(speed)
    if floatBodyVelocity then
        floatBodyVelocity.Velocity = Vector3.new(0, 0, 0)
    end
end

-- Auto Stealth teleport in Misc tab will come later

-- ===== Visual Tab =====

local visualPage = pages["Visual"]

-- ESP toggle
local espEnabled = false
local espToggle = Instance.new("TextButton")
espToggle.Size = UDim2.new(0, 180, 0, 40)
espToggle.Position = UDim2.new(0.5, -90, 0, 20)
espToggle.BackgroundColor3 = Color3.fromRGB(65, 65, 65)
espToggle.TextColor3 = Color3.new(1,1,1)
espToggle.Font = Enum.Font.GothamBold
espToggle.TextSize = 20
espToggle.Text = "Toggle ESP"
espToggle.Parent = visualPage

-- ESP Drawing
local espBoxes = {}

local function createESPForPlayer(plr)
    local box = Drawing.new("Square")
    box.Color = Color3.fromRGB(0, 255, 0)
    box.Thickness = 2
    box.Filled = false
    box.Visible = false

    local name = Drawing.new("Text")
    name.Text = plr.Name
    name.Color = Color3.fromRGB(0, 255, 0)
    name.Size = 14
    name.Center = true
    name.Outline = true
    name.Visible = false

    espBoxes[plr] = {box = box, name = name}
end

local function removeESPForPlayer(plr)
    if espBoxes[plr] then
        espBoxes[plr].box:Remove()
        espBoxes[plr].name:Remove()
        espBoxes[plr] = nil
    end
end

local function updateESP()
    if not espEnabled then
        for plr, data in pairs(espBoxes) do
            data.box.Visible = false
            data.name.Visible = false
        end
        return
    end

    local camera = workspace.CurrentCamera
    for plr, data in pairs(espBoxes) do
        if plr.Character and plr.Character:FindFirstChild("HumanoidRootPart") and plr ~= player then
            local hrp = plr.Character.HumanoidRootPart
            local pos, onScreen = camera:WorldToViewportPoint(hrp.Position)
            if onScreen then
                local size = math.clamp(300 / pos.Z, 20, 100)
                data.box.Size = Vector2.new(size, size * 1.5)
                data.box.Position = Vector2.new(pos.X - size/2, pos.Y - size*0.75)
                data.box.Visible = true

                data.name.Position = Vector2.new(pos.X, pos.Y - size)
                data.name.Visible = true
            else
                data.box.Visible = false
                data.name.Visible = false
            end
        else
            data.box.Visible = false
            data.name.Visible = false
        end
    end
end

espToggle.MouseButton1Click:Connect(function()
    espEnabled = not espEnabled
    if espEnabled then
        for _, plr in pairs(Players:GetPlayers()) do
            if plr ~= player then
                if not espBoxes[plr] then createESPForPlayer(plr) end
            end
        end
    else
        for plr, _ in pairs(espBoxes) do
            removeESPForPlayer(plr)
        end
    end
end)

Players.PlayerAdded:Connect(function(plr)
    if espEnabled then
        createESPForPlayer(plr)
    end
end)

Players.PlayerRemoving:Connect(function(plr)
    removeESPForPlayer(plr)
end)

RunService.RenderStepped:Connect(updateESP)

-- ===== Misc Tab =====

local miscPage = pages["Misc"]

-- Teleport Forward Button Label
local teleportLabel = Instance.new("TextLabel")
teleportLabel.Size = UDim2.new(1, 0, 0, 40)
teleportLabel.Position = UDim2.new(0, 0, 0, 20)
teleportLabel.BackgroundTransparency = 1
teleportLabel.TextColor3 = Color3.new(1,1,1)
teleportLabel.Font = Enum.Font.Gotham
teleportLabel.TextSize = 18
teleportLabel.Text = "Press E to teleport 5 studs forward"
teleportLabel.Parent = miscPage

-- Float control handled via Q key in UserInputService

-- === Float Logic ===

local function startFloating()
    if floating or not player.Character then return end
    local hrp = player.Character:FindFirstChild("HumanoidRootPart")
    if not hrp then return end

    -- Create invisible part to hold player afloat
    floatPart = Instance.new("Part")
    floatPart.Size = Vector3.new(2,2,2)
    floatPart.Transparency = 1
    floatPart.Anchored = true
    floatPart.CanCollide = false
    floatPart.Position = hrp.Position + Vector3.new(0, floatHeight, 0)
    floatPart.Parent = workspace

    -- Weld floatPart to HumanoidRootPart
    local weld = Instance.new("WeldConstraint")
    weld.Part0 = hrp
    weld.Part1 = floatPart
    weld.Parent = floatPart

    -- Add BodyVelocity to control movement
    floatBodyVelocity = Instance.new("BodyVelocity")
    floatBodyVelocity.Velocity = Vector3.new(0,0,0)
    floatBodyVelocity.MaxForce = Vector3.new(1e5,1e5,1e5)
    floatBodyVelocity.Parent = floatPart

    floating = true
end

local function stopFloating()
    if not floating then return end
    if floatBodyVelocity then
        floatBodyVelocity:Destroy()
        floatBodyVelocity = nil
    end
    if floatPart then
        floatPart:Destroy()
        floatPart = nil
    end
    floating = false
end

-- Update floating movement every frame
RunService.Heartbeat:Connect(function()
    if floating and floatBodyVelocity and floatPart and player.Character and player.Character:FindFirstChild("HumanoidRootPart") then
        local hrp = player.Character.HumanoidRootPart
        local moveDir = Vector3.new(0,0,0)

        -- WASD movement relative to camera
        local camCF = workspace.CurrentCamera.CFrame
        local forward = camCF.LookVector
        local right = camCF.RightVector

        local move = Vector3.new(0,0,0)

        if UserInputService:IsKeyDown(Enum.KeyCode.W) then move = move + forward end
        if UserInputService:IsKeyDown(Enum.KeyCode.S) then move = move - forward end
        if UserInputService:IsKeyDown(Enum.KeyCode.A) then move = move - right end
        if UserInputService:IsKeyDown(Enum.KeyCode.D) then move = move + right end

        move = Vector3.new(move.X, 0, move.Z)
        if move.Magnitude > 0 then
            move = move.Unit * floatSpeed
        end

        -- Apply velocity for smooth floating movement
        floatBodyVelocity.Velocity = Vector3.new(move.X, 0, move.Z)
        -- Keep floatPart at fixed height above player root
        floatPart.Position = hrp.Position + Vector3.new(0, floatHeight, 0)
    end
end)

-- Keybinds for toggle float and teleport forward
UserInputService.InputBegan:Connect(function(input, gameProcessed)
    if gameProcessed then return end

    if input.KeyCode == Enum.KeyCode.Q then
        if floating then
            stopFloating()
        else
            startFloating()
        end
    elseif input.KeyCode == Enum.KeyCode.E then
        if player.Character and player.Character:FindFirstChild("HumanoidRootPart") then
            local hrp = player.Character.HumanoidRootPart
            local forwardVector = hrp.CFrame.LookVector
            local targetPos = hrp.Position + forwardVector * teleportDistance
            -- Tween to new position for smooth teleport
            local tweenInfo = TweenInfo.new(0.15, Enum.EasingStyle.Quad, Enum.EasingDirection.Out)
            local tween = TweenService:Create(hrp, tweenInfo, {CFrame = CFrame.new(targetPos)})
            tween:Play()
        end
    end
end)

-- === Final Touches ===

print("Steal a Brainrot Helper GUI loaded. Use Q to toggle float, E to teleport forward, and Visual tab to toggle ESP.")
